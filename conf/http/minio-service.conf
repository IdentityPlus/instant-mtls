server{
    listen 443 ssl;

    include /etc/instant-mtls/conf/org-domain.conf;

    # these are all exposed as a subdomain of rbac.${domain-template}, so we need to add rbac, 
    # which is different from the upstream server which does not run on rbac subdomain and thus resoves to the DNS configured in the service
    server_name minio-service.rbac.${domain-template};

    include /etc/instant-mtls/identityplus-defaults.inc;

    proxy_buffering off;

    # you can define different roles and access based on different location patterns. 
    # "/" will apply it for any URL on this domain other than the ones defined above
    location / {

        # decide if client has access to the upstream services (identified by the domain name, below) before connection is established. 
        # ensure_role will terminate the TCP connection if the role requirement is not met. The domain of the service is not the 
        # domain of the load balancer, instead it is actually the identification of the service. The LB will rewrite the Host Header to 
        # the service identity domain if the access is granted so the reverse proxy will seem transparent to the service.
        access_by_lua_block {
            -- you define these roles in the https://platform.identity.plus dashboard, Your Organization, Your Service, "Access Management"
            -- please follow the quotation pattern as seen below
            identityplus.ensure_role('minio.' .. ngx.var.org_domain, {'member', 'administrator', 'org. administrator', 'customer'})
        } 

        include /etc/instant-mtls/conf/http/http-defaults.inc;

        proxy_set_header Host "minio.$org_domain";

        # authentication successful, forward to your upstream service 
        proxy_pass http://minio.$org_domain:9000;
    }
}
