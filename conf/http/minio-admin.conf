server{
    listen 443 ssl;

    include /etc/instant-mtls/org-domain.conf;
    server_name minio-admin.$domain;

    include /etc/instant-mtls/conf/identityplus-defaults.inc;

    proxy_buffering off;

    # you can define different roles and access based on different location patterns. 
    # "/" will apply it for any URL on this domain other than the ones defined above
    location / {

        # decide if client has access to the upstream services (identified by the domain name, below) before connection is established. 
        # ensure_role will terminate the TCP connection if the role requirement is not met. The domain of the service is not the 
        # domain of the load balancer, instead it is actually the identification of the service. The LB will rewrite the Host Header to 
        # the service identity domain if the access is granted so the reverse proxy will seem transparent to the service.
        access_by_lua_block {
            -- you define these roles in the https://platform.identity.plus dashboard, Your Organization, Your Service, "Access Management"
            -- please follow the quotation pattern as seen below
            identityplus.ensure_role('minio.' .. ngx.var.org_domain, {'administrator'})
        } 

        include /etc/instant-mtls/conf/http/http-defaults.inc;

        # minio needs special settings if we rewrite the host, so let's reset the rewrite
        proxy_set_header Host $host;

        # authentication successful, forward to your upstream service 
        proxy_pass http://minio.$org_domain:9001;
    }
}
